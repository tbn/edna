* EDPluginControlAutoproc.py
The master plugin that runs all the other ones in sequence. This
plugin's /process/ method corresponds to the whole fastproc
autoprocessing pipeline.

There are a few operations that could have been plugins but are only
functions in the EDPluginControlAutoproc module, for example the
_parse_aimless function, that is used to parse aimless output.

Other particular things are the way the autoproc status is
handled. Rather than instantiating the right number of
(EDPluginISPyBStoreAutoProcStatusv1_4) plugins from
the start, there's a group of functions that work like this:
- create_integration_id: instantiate the autoproc status plugin to
  create an integration id
- log_to_ispyb: takes either a single integration id or a list of them
  (because we have both the anom/noanom paths, so 2 integration ids
  after a certain point in the autoproc) and calls log_to_ispyb_impl
- log_to_ispyb_impl: instantiate the autoproc status plugin and use it
  to log the supplied information.

** EDPluginControlFileConversion.py
This plugin implements the different file conversions at the end of
the pipeline. It uses the some of the following plugins to generate
.mtz files for anom/noanom and merged/unmerged pairs.
*** EDPluginExecAimless.py
Runs aimless (replaces scala.)
*** EDPluginExecPointless.py
Runs pointless.
*** EDPluginExecTruncate.py
Runs truncate.
*** EDPluginExecUniqueify.py
Runs uniqueify.
*** EDPluginExecXdsToSca.py
Converts a XDS ASCII file to a .sca file

** EDPluginControlRunXdsFastProc.py
This plugin runs XDS up to four times, increasing the spot range at
each iteration in case of failure.

*** EDPluginExecMinimalXds.py
This plugin runs XDS given the path to an input file and some
additional parameters to alter in this input file.

** EDPluginParseXdsOutput.py
Parsed the XDS-generated files to extract shells information, cell
coordinates, unit cell constants, spacegroup, etc.

** EDPluginControlXscaleGenerate.py
Generate anom and non anom data with the XScale plugin.

*** EDPluginExecXscale.py
Encapsulate a run of XScale, like EDPluginExecMinimalXds does for XDS.

*** EDPluginParseXscaleOutput.py
Parses XScale's output to extract information (the bins.)

** EDPluginRBins.py
Encapsulate a run of the rbin binary. Not used for the fastproc.

** EDPluginResCutoff.py
Cuts of data according to the specified i/sigma value. Will probably
evolve to offer other means of cutting data (and get renamed in the
process.)

** EDPluginXDSGenerate.py
Generate using the MinimalXDS plugin.

* Others
** xdscfgformat.py and xdscfgparser.py
These two files implement a parser of XDS.INP input files.

** XSDataAutoproc.py
This file is the "data binding" generated from the "data model".
